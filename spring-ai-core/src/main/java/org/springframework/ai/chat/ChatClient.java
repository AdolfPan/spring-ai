/*
 * Copyright 2023 - 2024 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.springframework.ai.chat;

import org.springframework.ai.chat.dsl.ChatClientDsl;
import org.springframework.ai.chat.prompt.Prompt;

import java.util.Arrays;
import java.util.function.Consumer;

import org.springframework.ai.chat.messages.Message;
import org.springframework.ai.chat.messages.UserMessage;
import org.springframework.ai.model.ModelClient;

public interface ChatClient extends ModelClient<Prompt, ChatResponse> {

	default String call(String message) {
		Prompt prompt = new Prompt(new UserMessage(message));
		Generation generation = call(prompt).getResult();
		return (generation != null) ? generation.getOutput().getContent() : "";
	}

	/**
	 * Calls the chat API with a variable number of messages.
	 *
	 * <p>
	 * This method is deprecated since version 1.0.0 M1 and is intended to be removed in
	 * future versions. Use the {@link #chat(Consumer< ChatClientDsl.ChatBuilderSpec>
	 * chatSpec)} method instead.
	 * @param messages The messages to send to the chat API. Each message should implement
	 * the {@link Message} interface.
	 * @return The content of the output message generated by the AI.
	 */
	@Deprecated(since = "1.0.0 M1", forRemoval = true)
	default String call(Message... messages) {
		Prompt prompt = new Prompt(Arrays.asList(messages));
		Generation generation = call(prompt).getResult();
		return (generation != null) ? generation.getOutput().getContent() : "";
	}

	@Override
	ChatResponse call(Prompt prompt);

	default ChatClientDsl.ChatCallSpec chat(Consumer<ChatClientDsl.ChatBuilderSpec> chatSpec) {
		return null;
	}

}
